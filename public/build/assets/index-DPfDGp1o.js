let h={};const m=e=>{if(!e||!e.query&&!e.mergeQuery)return"";const t=e.query??e.mergeQuery,a=e.mergeQuery!==void 0,f=r=>r===!0?"1":r===!1?"0":r.toString(),d=new URLSearchParams(a&&typeof window<"u"?window.location.search:"");for(const r in t){if(t[r]===void 0||t[r]===null){d.delete(r);continue}if(Array.isArray(t[r]))d.has(`${r}[]`)&&d.delete(`${r}[]`),t[r].forEach(i=>{d.append(`${r}[]`,i.toString())});else if(typeof t[r]=="object"){d.forEach((i,Q)=>{Q.startsWith(`${r}[`)&&d.delete(Q)});for(const i in t[r])typeof t[r][i]>"u"||["string","number","boolean"].includes(typeof t[r][i])&&d.set(`${r}[${i}]`,f(t[r][i]))}else d.set(r,f(t[r]))}const y=d.toString();return y.length>0?`?${y}`:""},b=e=>{const t={...e??{}};for(const a in h)t[a]===void 0&&h[a]!==void 0&&(t[a]=h[a]);return t},o=e=>({url:o.url(e),method:"get"});o.definition={methods:["get","head"],url:"/login"};o.url=e=>o.definition.url+m(e);o.get=e=>({url:o.url(e),method:"get"});o.head=e=>({url:o.url(e),method:"head"});const g=e=>({action:o.url(e),method:"get"});g.get=e=>({action:o.url(e),method:"get"});g.head=e=>({action:o.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});o.form=g;const l=e=>({url:l.url(e),method:"post"});l.definition={methods:["post"],url:"/logout"};l.url=e=>l.definition.url+m(e);l.post=e=>({url:l.url(e),method:"post"});const q=e=>({action:l.url(e),method:"post"});q.post=e=>({action:l.url(e),method:"post"});l.form=q;const u=e=>({url:u.url(e),method:"get"});u.definition={methods:["get","head"],url:"/"};u.url=e=>u.definition.url+m(e);u.get=e=>({url:u.url(e),method:"get"});u.head=e=>({url:u.url(e),method:"head"});const s=e=>({action:u.url(e),method:"get"});s.get=e=>({action:u.url(e),method:"get"});s.head=e=>({action:u.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});u.form=s;const n=e=>({url:n.url(e),method:"get"});n.definition={methods:["get","head"],url:"/dashboard"};n.url=e=>n.definition.url+m(e);n.get=e=>({url:n.url(e),method:"get"});n.head=e=>({url:n.url(e),method:"head"});const c=e=>({action:n.url(e),method:"get"});c.get=e=>({action:n.url(e),method:"get"});c.head=e=>({action:n.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});n.form=c;export{b as a,l as b,n as d,u as h,o as l,m as q};
